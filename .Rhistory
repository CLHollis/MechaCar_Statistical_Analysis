setwd("C:/Users/c-hol/Desktop/Bootcamp/15_R/MechaCar_Statistical_Analysis")
setwd("C:/Users/c-hol/Desktop/Bootcamp/15_R/MechaCar_Statistical_Analysis")
library(tidyverse)
install.packages("dyplr")
install.packages(c("openssl", "Rcpp", "rlang", "rmarkdown", "withr", "xfun"))
install.packages("tidyverse")
install.packages("jsonlite")
library(dyplr)
library(tidyverse)
MechaCar_mpg <- read.csv('MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
View(MechaCar_mpg)
lm(qsec ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg,data=MechaCar_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg)
summary(lm(qsec ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD + mpg,data=MechaCar_mpg))
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg))
library(tidyverse)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg))
suspension_coil <- read.csv('suspension_coil.csv',check.names = F,stringsAsFactors = F)
View(suspension_coil)
View(suspension_coil)
?summarize()
total_summary <- suspension_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
View(total_summary)
total_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups = 'keep')
View(total_summary)
lot_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI).groups = 'keep')
lot__summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI).groups = 'keep')
suspension_coil <- read.csv('suspension_coil.csv',check.names = F,stringsAsFactors = F)
total_summary <- suspension_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
lot_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI).groups = 'keep')
lot_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups = 'keep')
View(lot_summary)
MechaCar_mpg <- read.csv('MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
View(MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg))
View(suspension_coil)
View(suspension_coil)
View(suspension_coil)
View(lot_summary)
?t.test()
suspension_coil_sample = sample(suspension_coil,20)
suspension_coil_sample <- sample(suspension_coil,20)
sample_PSI <- sample(suspension_coil,20)
?sample()
sample_PSI <- sample(suspension_coil, 20, replace = FALSE)
sample_PSI <- sample(suspension_coil$PSI, 20, replace = FALSE)
View(suspension_coil)
sample_PSI <- sample(suspension_coil$, 20, replace = FALSE)
sample_PSI <- sample(suspension_coil, 20, replace = FALSE)
View(suspension_coil)
sample_PSI <- sample(suspension_coil)
View(sample_PSI)
sample_PSI <- sample(suspension_coil,5)
sample_PSI <- sample(suspension_coil,1)
sample_PSI <- sample(20,suspension_coil)
sample_PSI <- sample( ,suspension_coil)
sample_PSI <- sample(5 ,suspension_coil)
sample_PSI <- sample( ,suspension_coil,5)
sample_PSI <- sample(suspension_coil)
View(sample_PSI)
sample_PSI <- sample(suspension_coil$, 20, replace = FALSE)
sample_PSI <- sample(suspension_coil, 20, replace = FALSE)
sample_PSI <- sample(suspension_coil$PSI, 20)
sample_PSI <- sample(1:nrow(suspension_coil), 20)
sample_PSI <- sample(1(suspension_coil), 20)
set.seed(10)
sample_PSI <- sample(1:nrow(suspension_coil), 20)
sample <- sample(suspension_coil)
View(sample)
sample_PSI <- suspension_coil[ ,c("PSI")]
sample <- sample(suspension_coil)
View(sample)
sample <- sample(c(suspension_coil))
sample_PSI <- sample(1:nrow(suspension_coil), 20, replace = TRUE)
print(suspension_coil[sample_PSI, ])
sample <- suspension_coil[sample(nrow(suspension_coil), size = 20, replace = FALSE),]
sample <- suspension_coil[sample(nrow(suspension_coil), size = 10, replace = FALSE),]
t.test(log10(sample$PSI),mu=mean(log10(suspension_coil$PSI)))
t.test(sample, mu=1500)
sample_table <- suspension_coil %>% sample_n(10)
View(sample_table)
suspension_coil <- read.csv('suspension_coil.csv',check.names = F,stringsAsFactors = F)
View(suspension_coil)
lot1 <- suspension_coil %>% filter(Manufacturing_Lot==Lot1)
lot1 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot1")
lot2 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot2")
lot3 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot3")
compare_lot1 <- t.test(suspension_coil$PSI,lot1$PSI,paired = T)
t.test(suspension_coil, mu=1500)
t.test(suspension_coil$PSI, mu=1500)
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
View(lot_summary)
t.test(lot3$PSI, mu=1496)
sample_susp_coil <- suspension_coil %>% sample_n(50)
View(sample_susp_coil)
compare_lot1 <- t.test(sample_susp_coil$PSI,lot1$PSI,paired = T)
View(compare_lot1)
t.test(sample_susp_coil$PSI,lot1$PSI,paired = T)
t.test(sample_susp_coil$PSI,lot2$PSI,paired = T)
t.test(sample_susp_coil$PSI,lot3$PSI,paired = T)
View(suspension_coil)
t.test(lot1$PSI, mu=1500)
View(lot1)
View(lot_summary)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
View(lot3)
t.test(suspension_coil$PSI, mu=1500)
# Write three more t-Tests using the subset() argument to determine if the PSI for each manufacturing lot is statistically different from the population mean of 1,500 PSI
# Create seperat lot datasets
lot1 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot1")
sample_susp_coil <- suspension_coil %>% sample_n(15)
t.test(suspension_coil$PSI, mu=1500)
t.test(sample_susp_coil$PSI, mu=1500)
View(suspension_coil)
View(sample)
View(sample_susp_coil)
View(lot_summary)
# Deliverable 1: Linear Regression to Predict MPG
# Load the dplyr package
library(tidyverse)
# Import and read in the MechaCar_mpg.csv file as a dataframe
MechaCar_mpg <- read.csv('MechaCar_mpg.csv',check.names = F,stringsAsFactors = F)
# Perform linear regression, pass in all six variables, add the df you created in Step 4 as the data parameter.
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg)
# Determine the p-value and the r-squared value for the linear regression model
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=MechaCar_mpg))
#--------------------------------------------
# Deliverable 2: Summary Statistics on Suspension Coils
# Import and read in the Suspension_Coil.csv file as a table
suspension_coil <- read.csv('suspension_coil.csv',check.names = F,stringsAsFactors = F)
# Create a total_summary df to get the mean, median, variance, and standard deviation of the suspension coilâ€™s PSI column
total_summary <- suspension_coil %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI))
# Create a lot_summary df to group each manufacturing lot by those ^ stats.
lot_summary <- suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI),.groups = 'keep')
#--------------------------------------------
# Deliverable 3: T-Test on Suspension Coils
# Use a t-Test to determine if the PSI across all manufacturing lots is statistically different from the population mean of 1,500 PSI
# Create a sample
sample_susp_coil <- suspension_coil %>% sample_n(15)
t.test(suspension_coil$PSI, mu=1500)
t.test(sample_susp_coil$PSI, mu=1500)
# Write three more t-Tests using the subset() argument to determine if the PSI for each manufacturing lot is statistically different from the population mean of 1,500 PSI
# Create seperat lot datasets
lot1 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot1")
lot2 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot2")
lot3 <- suspension_coil %>% filter(Manufacturing_Lot=="Lot3")
# Create the t-Tests for each lot
t.test(lot1$PSI, mu=1500)
t.test(lot2$PSI, mu=1500)
t.test(lot3$PSI, mu=1500)
